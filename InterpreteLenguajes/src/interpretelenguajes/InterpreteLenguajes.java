/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package interpretelenguajes;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.antlr.v4.runtime.ANTLRFileStream;
import org.antlr.v4.runtime.CommonTokenStream;
import org.antlr.v4.runtime.tree.ParseTree;

/**
 *
 * @author TOSHIBA
 */
public class InterpreteLenguajes extends javax.swing.JFrame {
    
    //Variables
    EvalVisitor visitor = new EvalVisitor();
    String strEntrada = "";
    File archivo=new File("Instrucciones.proyectoLenguajes");

    public String getStrEntrada() {
        return strEntrada;
    }

    public void setStrEntrada(String strEntrada) {
        this.strEntrada = strEntrada;
    }
    
    /**
     * Creates new form Interfaz
     */
    public InterpreteLenguajes() {
        initComponents();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea_Input = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea_Salida = new javax.swing.JTextArea();
        jButton_Run = new javax.swing.JButton();
        jButton_Clean = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Interpreted Language");
        setResizable(false);

        jTextArea_Input.setColumns(20);
        jTextArea_Input.setRows(5);
        jScrollPane1.setViewportView(jTextArea_Input);

        jTextArea_Salida.setEditable(false);
        jTextArea_Salida.setColumns(20);
        jTextArea_Salida.setRows(5);
        jTextArea_Salida.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane2.setViewportView(jTextArea_Salida);

        jButton_Run.setText("Run");
        jButton_Run.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_RunActionPerformed(evt);
            }
        });

        jButton_Clean.setText("Clean");
        jButton_Clean.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_CleanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton_Clean)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton_Run))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane2)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 684, Short.MAX_VALUE)))
                .addGap(28, 28, 28))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_Run)
                    .addComponent(jButton_Clean))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_RunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_RunActionPerformed
        try {
            correrInterprete();
        } catch (IOException ex) {
            Logger.getLogger(InterpreteLenguajes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton_RunActionPerformed

    private void jButton_CleanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_CleanActionPerformed
        //A continuacion se limpian las variables y la pantalla de resultados:
        strEntrada = "";
        visitor.setStrProceso("");
        jTextArea_Salida.setText(visitor.getStrProceso());
        jTextArea_Input.setText(strEntrada);
        archivo.delete();
    }//GEN-LAST:event_jButton_CleanActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws IOException {       
                
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InterpreteLenguajes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_Clean;
    private javax.swing.JButton jButton_Run;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea_Input;
    public javax.swing.JTextArea jTextArea_Salida;
    // End of variables declaration//GEN-END:variables

    private void correrInterprete() throws IOException {
        
        //Obteniendo el texto de la interfaz de entrada y creando fichero de instrucciones:
        strEntrada = jTextArea_Input.getText();
        crearFichero(strEntrada);
        
        //Proceso del Interprete
        proyectoLenguajesLexer lexer = new proyectoLenguajesLexer(new ANTLRFileStream("Instrucciones.proyectoLenguajes"));
        proyectoLenguajesParser parser = new proyectoLenguajesParser(new CommonTokenStream(lexer));
        ParseTree tree = parser.parse();
        //EvalVisitor visitor = new EvalVisitor();
        visitor.visit(tree); 
        
        //Aqui se muestran los resultados del interprete, el resultado se obtiene
        //de la clase EvalVisitor, se obtienen de la variable que guarda el proceso.
        jTextArea_Salida.setText(visitor.getStrProceso());
        //jTextArea_Salida.setText(strEntrada);
    }

    private void crearFichero(String Entrada) {
        try{
            //File archivo=new File("Instrucciones.proyectoLenguajes");
            FileWriter escribir=new FileWriter(archivo,true);
            escribir.write(Entrada);
            escribir.close();
        }
       
        catch(Exception e){
            System.out.println("Error al escribir");
        }
    }
}
